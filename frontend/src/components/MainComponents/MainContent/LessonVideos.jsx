import { useState, useEffect } from "react";
import QuizPage from "./QuizPage"; // Gi·∫£ s·ª≠ QuizPage n·∫±m c√πng th∆∞ m·ª•c ho·∫∑c ƒëi·ªÅu ch·ªânh ƒë∆∞·ªùng d·∫´n

const LessonVideos = ({ lessonId, lessonTitle, onBack }) => {
  const [videos, setVideos] = useState([]);
  const [loading, setLoading] = useState(true);
  const [currentVideo, setCurrentVideo] = useState(null);
  const [error, setError] = useState(null);
  const [showQuiz, setShowQuiz] = useState(false);
  const [selectedQuiz, setSelectedQuiz] = useState(null);

  // Mock API call ƒë·ªÉ l·∫•y danh s√°ch video v√† quiz theo lessonId
  useEffect(() => {
    const fetchVideos = async () => {
      setLoading(true);
      setError(null);

      try {
        // Mock data cho video v√† quiz
        setTimeout(() => {
          const mockVideos = {
            1: [
              {
                id: 101,
                title: "M√¥ ph·ªèng th√≠ nghi·ªám v·ªÅ ƒë·ªô pH trong d·∫° d√†y",
                videoUrl: "https://www.youtube.com/embed/djX2VL1Sk-E",
                duration: "1:02",
                description: "T√¨m hi·ªÉu kh√°i ni·ªám c∆° b·∫£n v·ªÅ ƒë·ªô pH v√† c√°ch s·ª≠ d·ª•ng gi·∫•y qu·ª≥ t√≠m",
                quiz: {
                  id: 1,
                  title: "B√†i ki·ªÉm tra v·ªÅ ƒë·ªô pH",
                  duration: 60, // Th·ªùi gian l√†m b√†i (ph√∫t)
                  questions: [
                    {
                      questionId: 1001,
                      question: "ƒê·ªô pH c·ªßa dung d·ªãch trung t√≠nh l√† bao nhi√™u?",
                      options: [{ content: "7" }, { content: "0" }, { content: "14" }, { content: "5" }],
                    },
                    {
                      questionId: 1002,
                      question: "Gi·∫•y qu·ª≥ t√≠m chuy·ªÉn m√†u g√¨ trong m√¥i tr∆∞·ªùng acid?",
                      options: [{ content: "Xanh" }, { content: "ƒê·ªè" }, { content: "T√≠m" }, { content: "V√†ng" }],
                    }
                  ]
                }
              },
              {
                id: 102,
                title: "Th√≠ nghi·ªám v·ªÅ ƒë·ªô pH",
                videoUrl: "https://www.youtube.com/embed/fTthjFmncvc",
                duration: "1:20",
                description: "Th√≠ nghi·ªám th·ª±c t·∫ø v·ªõi gi·∫•y qu·ª≥ v√† c√°c dung d·ªãch acid, base",
                quiz: {
                  id: 1,
                  title: "B√†i ki·ªÉm tra v·ªÅ ƒë·ªô pH",
                  duration: 10,
                  questions: [
                    {
                      questionId: 1003,
                      question: "Dung d·ªãch n√†o d∆∞·ªõi ƒë√¢y l√† base?",
                      options: [
                        { content: "Gi·∫•m" },
                        { content: "N∆∞·ªõc c·∫•t" },
                        { content: "N∆∞·ªõc chanh" },
                        { content: "X√∫t" }
                      ],
                    }
                  ]
                }
              }
            ],
            2: [
              {
                id: 201,
                title: "Th·ª±c h√†nh chu·∫©n ƒë·ªô acid-base",
                videoUrl: "https://www.youtube.com/embed/Vpdvidk1OKQ",
                duration: "1:52",
                description: "Hi·ªÉu v·ªÅ ph·∫£n ·ª©ng trung h√≤a gi·ªØa acid v√† base",
                quiz: {
                  id: 2,
                  title: "B√†i ki·ªÉm tra v·ªÅ chu·∫©n ƒë·ªô acid-base",
                  duration: 35,
                  questions: [
                    {
                      questionId: 2001,
                      question: "Ph·∫£n ·ª©ng trung h√≤a t·∫°o ra s·∫£n ph·∫©m n√†o?",
                      options: [
                        { content: "Mu·ªëi v√† n∆∞·ªõc" },
                        { content: "Kh√≠ v√† n∆∞·ªõc" },
                        { content: "Mu·ªëi v√† kh√≠" },
                        { content: "Acid v√† base" }
                      ],
                    }
                  ]
                }
              }
            ]
          };

          const lessonVideos = mockVideos[lessonId] || [];
          setVideos(lessonVideos);
          if (lessonVideos.length > 0) {
            setCurrentVideo(lessonVideos[0]);
          }
          setLoading(false);
        }, 800);
      } catch (err) {
        setError("Kh√¥ng th·ªÉ t·∫£i danh s√°ch video. Vui l√≤ng th·ª≠ l·∫°i sau.");
        setLoading(false);
      }
    };

    if (lessonId) {
      fetchVideos();
    }
  }, [lessonId]);

  const handleVideoSelect = (video) => {
    setCurrentVideo(video);
    setShowQuiz(false); // ·∫®n quiz khi chuy·ªÉn video
    setSelectedQuiz(null);
  };

  const handleQuizClick = () => {
    if (currentVideo?.quiz) {
      setSelectedQuiz({
        id: currentVideo.quiz.id,
        title: currentVideo.quiz.title,
        duration: currentVideo.quiz.duration,
        questions: currentVideo.quiz.questions
      });
      setShowQuiz(true);
    } else {
      setError("Video n√†y ch∆∞a c√≥ b√†i ki·ªÉm tra li√™n quan.");
    }
  };

  const handleQuizBack = () => {
    setShowQuiz(false);
    setSelectedQuiz(null);
  };

  if (loading) {
    return (
      <div className="container-fluid py-4" style={{ fontFamily: '"Inter", "Segoe UI", Tahoma, Geneva, Verdana, sans-serif' }}>
        <div className="d-flex justify-content-center align-items-center" style={{ height: '400px' }}>
          <div className="spinner-border text-primary" role="status">
            <span className="visually-hidden">ƒêang t·∫£i...</span>
          </div>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="container-fluid py-4" style={{ fontFamily: '"Inter", "Segoe UI", Tahoma, Geneva, Verdana, sans-serif' }}>
        <div className="text-center">
          <div className="alert alert-danger" role="alert">
            {error}
          </div>
          <button className="btn btn-secondary" onClick={onBack}>
            ‚Üê Quay l·∫°i danh s√°ch b√†i h·ªçc
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className="container-fluid py-4" style={{ fontFamily: '"Inter", "Segoe UI", Tahoma, Geneva, Verdana, sans-serif' }}>
      {/* Header */}
      <div className="row mb-4">
        <div className="col">
          <button
            className="btn btn-outline-secondary mb-3"
            onClick={onBack}
            style={{ fontFamily: '"Inter", sans-serif' }}
          >
            ‚Üê Quay l·∫°i danh s√°ch b√†i h·ªçc
          </button>
          <h2 className="fw-bold text-primary mb-1" style={{ fontFamily: '"Inter", sans-serif' }}>
            üé• {lessonTitle}
          </h2>
          <p className="text-muted" style={{ fontFamily: '"Inter", sans-serif' }}>
            {videos.length} video c√≥ s·∫µn
          </p>
        </div>
      </div>

      <div className="row">
        {/* Video Player */}
        <div className="col-lg-8 mb-4">
          {currentVideo && (
            <div className="card border-0 shadow-sm">
              <div className="card-body p-0">
                <div className="ratio ratio-16x9">
                  <iframe
                    src={currentVideo.videoUrl}
                    title={currentVideo.title}
                    allowFullScreen
                    style={{ borderRadius: '8px 8px 0 0' }}
                  ></iframe>
                </div>
                <div className="p-4">
                  <h4 className="fw-bold mb-2" style={{ fontFamily: '"Inter", sans-serif' }}>
                    {currentVideo.title}
                  </h4>
                  <p className="text-muted mb-2" style={{ fontFamily: '"Inter", sans-serif' }}>
                    ‚è±Ô∏è {currentVideo.duration}
                  </p>
                  <p className="text-secondary" style={{ fontFamily: '"Inter", sans-serif' }}>
                    {currentVideo.description}
                  </p>
                  <button
                    className="btn btn-success w-100 mt-3"
                    onClick={handleQuizClick}
                    style={{ fontFamily: '"Inter", sans-serif' }}
                  >
                    ‚úèÔ∏è L√†m b√†i t·∫≠p
                  </button>
                </div>
              </div>
            </div>
          )}

          {/* Quiz Section */}
          {showQuiz && selectedQuiz && (
            <div className="mt-4">
              <QuizPage
                questionList={selectedQuiz}
                quizTitle={selectedQuiz.title}
                onBack={handleQuizBack}
              />
            </div>
          )}
        </div>

        {/* Video List */}
        <div className="col-lg-4">
          <div className="card border-0 shadow-sm">
            <div className="card-header bg-light border-0">
              <h5 className="mb-0 fw-bold" style={{ fontFamily: '"Inter", sans-serif' }}>
                üìã Danh s√°ch video
              </h5>
            </div>
            <div className="card-body p-0">
              {videos.map((video, index) => (
                <div
                  key={video.id}
                  className={`d-flex align-items-center p-3 border-bottom cursor-pointer ${
                    currentVideo?.id === video.id ? 'bg-primary bg-opacity-10 border-primary border-opacity-25' : ''
                  }`}
                  style={{
                    cursor: 'pointer',
                    transition: 'background-color 0.2s',
                    fontFamily: '"Inter", sans-serif'
                  }}
                  onClick={() => handleVideoSelect(video)}
                  onMouseEnter={(e) => {
                    if (currentVideo?.id !== video.id) {
                      e.currentTarget.style.backgroundColor = '#f8f9fa';
                    }
                  }}
                  onMouseLeave={(e) => {
                    if (currentVideo?.id !== video.id) {
                      e.currentTarget.style.backgroundColor = '';
                    }
                  }}
                >
                  <div className="me-3">
                    <div
                      className={`rounded-circle d-flex align-items-center justify-content-center ${
                        currentVideo?.id === video.id ? 'bg-primary text-white' : 'bg-secondary text-white'
                      }`}
                      style={{ width: '32px', height: '32px', fontSize: '14px', fontWeight: 'bold' }}
                    >
                      {index + 1}
                    </div>
                  </div>
                  <div className="flex-grow-1">
                    <h6
                      className="mb-1 fw-semibold"
                      style={{
                        fontSize: '14px',
                        color: currentVideo?.id === video.id ? '#0d6efd' : '#212529'
                      }}
                    >
                      {video.title}
                    </h6>
                    <small className="text-muted">‚è±Ô∏è {video.duration}</small>
                  </div>
                  {currentVideo?.id === video.id && (
                    <div className="ms-2">
                      <i className="text-primary">‚ñ∂Ô∏è</i>
                    </div>
                  )}
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default LessonVideos;